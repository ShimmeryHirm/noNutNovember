from datetime import datetime
from time import strftime

import pytz
from telegram import ParseMode

from core import utils
from core.db_map import UsersTable, session_scope
from core.keyborads import Keyboards


def callback_worker(update, context):
    query = update.callback_query

    if query.data == 'confirm':
        query.message.edit_text(
            f'<i>–£–≤–µ—Ä–µ–Ω –ª–∏ —Ç—ã, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—É –∑–ª–∞?</i>\n'
            f'<code>–£—á—Ç–∏, –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø—É—Ç–∏ –Ω–µ –±—É–¥–µ—Ç..</code>',
            parse_mode=ParseMode.HTML,
            reply_markup=Keyboards().confirm)

    if query.data == 'activate':
        with session_scope() as session:
            session.query(UsersTable).filter_by(id=query.message.chat.id).update({UsersTable.side: 1})
            context.bot.answer_callback_query(callback_query_id=query.id,
                                              text='–¢—ã —Å–¥–µ–ª–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä.',
                                              show_alert=True)

            query.message.edit_text(
                parse_mode=ParseMode.HTML,
                reply_markup=Keyboards().sith,

                text=f'<i>üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é</i>\n\n'
                     f'<b>–¢—ã –Ω–∞ —Ç–µ–º–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µü§ù</b>\n'
                     f'<i>–î–∂–µ–¥–∞—è–º —Å—Ç—Ä–∞–¥–∞—Ç—å –µ—â–µ <b>{utils.calc_days()}</b> –¥–Ω–µ–π</i>\n\n'

            )

    if query.data == 'cancel':
        context.bot.answer_callback_query(callback_query_id=query.id, text='–ë—É–¥—å –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!')

        query.message.edit_text(
            parse_mode=ParseMode.HTML,
            reply_markup=Keyboards().main_menu_keyboard,

            text=f'<i>üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é</i>\n\n'
                 f'<b>–¢—ã –Ω–∞ —Å–≤–µ—Ç–ª–æ–π —Å—Ç–æ—Ä–æ–Ω–µ‚úä</b>\n'
                 f'<i>–î–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥—Ä–æ—á–∞–±—Ä—è <b>{utils.calc_days()}</b> –¥–Ω–µ–π</i>\n\n'
        )
    if query.data == 'reload':
        d = datetime.now(pytz.timezone("Europe/Moscow"))
        t = d.strftime("%d.%m.%Y %H:%M")
        x = query.message.text.split()
        l = []
        for i in x:
            if i.isdigit():
                l.append(int(i))
        l.pop(0)
        with session_scope() as session:
            slave = session.query(UsersTable).filter_by(id=query.message.chat.id).first()  # Find slave in DB

            users = session.query(UsersTable).all()
            dark = session.query(UsersTable).filter(UsersTable.side == 1).all()
            white = session.query(UsersTable).filter(UsersTable.side == 0).all()
            if len(l) == 0:
                l = [len(users), len(white), len(dark)]
            new_users = len(users) - l[0]
            new_white = len(white) - l[1]
            new_dark = len(dark) - l[2]

            try:
                if slave.side == 1:
                    query.message.edit_text(
                        parse_mode=ParseMode.HTML,
                        reply_markup=Keyboards().sith,

                        text=f'<i>üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é</i>\n\n'
                             f'<b>–¢—ã –Ω–∞ —Ç–µ–º–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µ ü§ù</b>\n'
                             f'<i>–î–∂–µ–¥–∞—è–º —Å—Ç—Ä–∞–¥–∞—Ç—å –µ—â–µ <b>{utils.calc_days()}</b> –¥–Ω–µ–π</i>\n\n'
                             f'<b>[üìà–°–¢–ê–¢–ò–°–¢–ò–ö–ê –æ—Ç {t}]\n</b>'
                             f'<i>üë∑–õ—é–¥–µ–π –≤ –±–æ—Ç–µ:</i> <b>{len(users)} (+{new_users})\n</b>'
                             f'<i>‚úä–î–∂–µ–¥–∞–µ–≤:</i> <b>{len(white)} (+{new_white})\n</b>'
                             f'<i>üëπ–°–∏—Ç—Ö–æ–≤:</i> <b>{len(dark)} (+{new_dark})</b>')
                else:
                    query.message.edit_text(
                        reply_markup=Keyboards().main_menu_keyboard,
                        parse_mode=ParseMode.HTML,
                        text=f'<i>üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é </i>\n'
                             f'<b>–¢—ã –Ω–∞ —Å–≤–µ—Ç–ª–æ–π —Å—Ç–æ—Ä–æ–Ω–µ‚úä</b>\n'
                             f'<i>–î–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥—Ä–æ—á–∞–±—Ä—è <b>{utils.calc_days()}</b> –¥–Ω–µ–π</i>\n\n'
                             f'<b>[üìà–°–¢–ê–¢–ò–°–¢–ò–ö–ê –æ—Ç {t}]\n</b>'
                             f'<i>üë∑–õ—é–¥–µ–π –≤ –±–æ—Ç–µ:</i> <b>{len(users)} (+{new_users})\n</b>'
                             f'<i>‚úä–î–∂–µ–¥–∞–µ–≤:</i> <b>{len(white)} (+{new_white})\n</b>'
                             f'<i>üëπ–°–∏—Ç—Ö–æ–≤:</i> <b>{len(dark)} (+{new_dark})</b>\n\n'

                             '<code>–ß—Ç–æ–±—ã —á—Ç–æ–±—ã –ø—Ä–∏–º–∫–Ω—É—Ç—å –∫ —Å–∏—Ç—Ö–∞–º –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüîΩ:</code>')
            except Exception as e:
                context.bot.answer_callback_query(callback_query_id=query.id, text='–ù–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å')
